{
  "$defs": {
    "ClassicThemeOptions": {
      "additionalProperties": false,
      "description": "This class is the data model of the theme options for the classic theme.",
      "properties": {
        "font_size": {
          "default": "10pt",
          "description": "The font size of the CV. The default value is 10pt.",
          "enum": [
            "10pt",
            "11pt",
            "12pt"
          ],
          "title": "Font Size",
          "type": "string"
        },
        "page_size": {
          "default": "letterpaper",
          "description": "The page size of the CV. It can be a4paper or letterpaper. The default value is letterpaper.",
          "enum": [
            "a4paper",
            "letterpaper"
          ],
          "title": "Page Size",
          "type": "string"
        },
        "color": {
          "default": "rgb(0,79,144)",
          "description": "The primary color of the theme. \nThe color can be specified either with their [name](https://www.w3.org/TR/SVG11/types.html#ColorKeywords), hexadecimal value, RGB value, or HSL value. The default value is rgb(0,79,144).",
          "examples": [
            "Black",
            "7fffd4",
            "rgb(0,79,144)",
            "hsl(270, 60%, 70%)"
          ],
          "format": "color",
          "title": "Primary Color",
          "type": "string"
        },
        "disable_page_numbering": {
          "default": false,
          "description": "If this option is set to true, then the page numbering will be disabled. The default value is false.",
          "title": "Disable Page Numbering",
          "type": "boolean"
        },
        "page_numbering_style": {
          "default": "NAME - Page PAGE_NUMBER of TOTAL_PAGES",
          "description": "The style of the page numbering. The following placeholders can be used:\n- NAME: The name of the person\n- PAGE_NUMBER: The current page number\n- TOTAL_PAGES: The total number of pages\nThe default value is NAME - Page PAGE_NUMBER of TOTAL_PAGES.",
          "title": "Page Numbering Style",
          "type": "string"
        },
        "show_last_updated_date": {
          "default": true,
          "description": "If this option is set to true, then the last updated date will be shown in the header. The default value is true.",
          "title": "Show Last Updated Date",
          "type": "boolean"
        },
        "header_font_size": {
          "default": "30 pt",
          "description": "The font size of the header (the name of the person). The default value is 30 pt.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Header Font Size",
          "type": "string"
        },
        "text_alignment": {
          "default": "justified",
          "description": "The alignment of the text. The default value is justified.",
          "enum": [
            "left-aligned",
            "justified"
          ],
          "title": "Text Alignment",
          "type": "string"
        },
        "margins": {
          "allOf": [
            {
              "$ref": "#/$defs/Margins"
            }
          ],
          "default": {
            "page": {
              "bottom": "2 cm",
              "left": "2 cm",
              "right": "2 cm",
              "top": "2 cm"
            },
            "section_title": {
              "bottom": "0.2 cm",
              "top": "0.3 cm"
            },
            "entry_area": {
              "date_and_location_width": "4.1 cm",
              "left_and_right": "0.2 cm",
              "vertical_between": "0.2 cm"
            },
            "highlights_area": {
              "left": "0.4 cm",
              "top": "0.10 cm",
              "vertical_between_bullet_points": "0.10 cm"
            },
            "header": {
              "bottom": "0.3 cm",
              "horizontal_between_connections": "0.5 cm",
              "vertical_between_name_and_connections": "0.3 cm"
            }
          },
          "description": "Page, section title, entry field, and highlights field margins.",
          "title": "Margins"
        },
        "theme": {
          "const": "classic",
          "title": "Theme"
        },
        "show_timespan_in": {
          "default": [],
          "description": "The time span will be shown in the date and location column in these sections. The input should be a list of section titles as strings (case-sensitive). The default value is an empty list, which means the time span will not be shown in any section.",
          "items": {
            "type": "string"
          },
          "title": "Show Time Span in These Sections",
          "type": "array"
        }
      },
      "required": [
        "theme"
      ],
      "title": "ClassicThemeOptions",
      "type": "object"
    },
    "CurriculumVitae": {
      "additionalProperties": false,
      "description": "This class is the data model of the CV.",
      "properties": {
        "name": {
          "default": null,
          "description": "The name of the person.",
          "title": "Name",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "label": {
          "default": null,
          "description": "The label of the person.",
          "title": "Label",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the person. This is not rendered currently.",
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "email": {
          "default": null,
          "description": "The email of the person.",
          "title": "Email",
          "allOf": [
            {
              "format": "email",
              "type": "string"
            }
          ]
        },
        "phone": {
          "default": null,
          "description": "The phone number of the person.",
          "title": "Phone",
          "allOf": [
            {
              "format": "phone",
              "maxLength": 64,
              "minLength": 7,
              "type": "string"
            }
          ]
        },
        "website": {
          "default": null,
          "description": "The website of the person.",
          "title": "Website",
          "allOf": [
            {
              "format": "uri",
              "maxLength": 2083,
              "minLength": 1,
              "type": "string"
            }
          ]
        },
        "social_networks": {
          "default": null,
          "description": "The social networks of the person.",
          "title": "Social Networks",
          "allOf": [
            {
              "items": {
                "$ref": "#/$defs/SocialNetwork"
              },
              "type": "array"
            }
          ]
        },
        "sections": {
          "default": null,
          "description": "The sections of the CV.",
          "title": "Sections",
          "allOf": [
            {
              "additionalProperties": {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/EducationEntry"
                    },
                    {
                      "$ref": "#/$defs/ExperienceEntry"
                    },
                    {
                      "$ref": "#/$defs/PublicationEntry"
                    },
                    {
                      "$ref": "#/$defs/NormalEntry"
                    },
                    {
                      "$ref": "#/$defs/OneLineEntry"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              },
              "type": "object"
            }
          ]
        }
      },
      "title": "CurriculumVitae",
      "type": "object"
    },
    "EducationEntry": {
      "additionalProperties": false,
      "description": "This class is the data model of `EducationEntry`.",
      "properties": {
        "start_date": {
          "default": "2000-01-01",
          "description": "The start date of the event in YYYY-MM-DD, YYYY-MM, or YYYY format.",
          "examples": [
            "2020-09-24"
          ],
          "title": "Start Date",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "\\d{4}(-\\d{2})?(-\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "end_date": {
          "default": "2020-01-01",
          "description": "The end date of the event in YYYY-MM-DD, YYYY-MM, or YYYY format. If the event is still ongoing, then type \"present\" or provide only the start date.",
          "examples": [
            "2020-09-24",
            "present"
          ],
          "title": "End Date",
          "oneOf": [
            {
              "const": "present"
            },
            {
              "type": "integer"
            },
            {
              "pattern": "\\d{4}(-\\d{2})?(-\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "date": {
          "default": "Custom Date or 2020-01-01",
          "description": "If the event is a one-day event, then this field should be filled in YYYY-MM-DD format. If the event is a multi-day event, then the start date and end date should be provided instead. All of them can't be provided at the same time.",
          "examples": [
            "2020-09-24",
            "My Custom Date"
          ],
          "title": "Date",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "highlights": {
          "default": null,
          "description": "The highlights of the event as a list of strings.",
          "examples": [
            "Did this.",
            "Did that."
          ],
          "title": "Highlights",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the event.",
          "examples": [
            "Istanbul, T\u00fcrkiye"
          ],
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "institution": {
          "description": "The institution name. It will be shown as bold text.",
          "title": "Institution",
          "type": "string"
        },
        "area": {
          "description": "The area of study. It will be shown as normal text.",
          "title": "Area",
          "type": "string"
        },
        "degree": {
          "default": "PhD",
          "description": "The type of the degree.",
          "examples": [
            "BS",
            "BA",
            "PhD",
            "MS"
          ],
          "title": "Degree",
          "allOf": [
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "institution",
        "area"
      ],
      "title": "EducationEntry",
      "type": "object"
    },
    "EntryAreaMargins": {
      "description": "This class is a data model for the entry area margins.",
      "properties": {
        "left_and_right": {
          "default": "0.2 cm",
          "description": "The left margin of entry areas. The default value is 0.2 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Left Margin",
          "type": "string"
        },
        "vertical_between": {
          "default": "0.2 cm",
          "description": "The vertical margin between entry areas. The default value is 0.2 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Vertical Margin Between Entry Areas",
          "type": "string"
        },
        "date_and_location_width": {
          "default": "4.1 cm",
          "description": "The width of the date and location column. The default value is 4.1 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Date and Location Column Width",
          "type": "string"
        }
      },
      "title": "EntryAreaMargins",
      "type": "object",
      "additionalProperties": false
    },
    "ExperienceEntry": {
      "additionalProperties": false,
      "description": "This class is the data model of `ExperienceEntry`.",
      "properties": {
        "start_date": {
          "default": "2000-01-01",
          "description": "The start date of the event in YYYY-MM-DD, YYYY-MM, or YYYY format.",
          "examples": [
            "2020-09-24"
          ],
          "title": "Start Date",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "\\d{4}(-\\d{2})?(-\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "end_date": {
          "default": "2020-01-01",
          "description": "The end date of the event in YYYY-MM-DD, YYYY-MM, or YYYY format. If the event is still ongoing, then type \"present\" or provide only the start date.",
          "examples": [
            "2020-09-24",
            "present"
          ],
          "title": "End Date",
          "oneOf": [
            {
              "const": "present"
            },
            {
              "type": "integer"
            },
            {
              "pattern": "\\d{4}(-\\d{2})?(-\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "date": {
          "default": "Custom Date or 2020-01-01",
          "description": "If the event is a one-day event, then this field should be filled in YYYY-MM-DD format. If the event is a multi-day event, then the start date and end date should be provided instead. All of them can't be provided at the same time.",
          "examples": [
            "2020-09-24",
            "My Custom Date"
          ],
          "title": "Date",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "highlights": {
          "default": null,
          "description": "The highlights of the event as a list of strings.",
          "examples": [
            "Did this.",
            "Did that."
          ],
          "title": "Highlights",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the event.",
          "examples": [
            "Istanbul, T\u00fcrkiye"
          ],
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "company": {
          "description": "The company name. It will be shown as bold text.",
          "title": "Company",
          "type": "string"
        },
        "position": {
          "description": "The position. It will be shown as normal text.",
          "title": "Position",
          "type": "string"
        }
      },
      "required": [
        "company",
        "position"
      ],
      "title": "ExperienceEntry",
      "type": "object"
    },
    "HeaderMargins": {
      "description": "This class is a data model for the header margins.",
      "properties": {
        "vertical_between_name_and_connections": {
          "default": "0.3 cm",
          "description": "The vertical margin between the name of the person and the connections. The default value is 0.3 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Vertical Margin Between the Name and Connections",
          "type": "string"
        },
        "bottom": {
          "default": "0.3 cm",
          "description": "The bottom margin of the header, i.e., the vertical margin between the connections and the first section title. The default value is 0.3 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Bottom Margin",
          "type": "string"
        },
        "horizontal_between_connections": {
          "default": "0.5 cm",
          "description": "The space between the connections (like phone, email, and website). The default value is 0.5 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Space Between Connections",
          "type": "string"
        }
      },
      "title": "HeaderMargins",
      "type": "object",
      "additionalProperties": false
    },
    "HighlightsAreaMargins": {
      "description": "This class is a data model for the highlights area margins.",
      "properties": {
        "top": {
          "default": "0.10 cm",
          "description": "The top margin of highlights areas. The default value is 0.10 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Top Margin",
          "type": "string"
        },
        "left": {
          "default": "0.4 cm",
          "description": "The left margin of highlights areas. The default value is 0.4 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Left Margin",
          "type": "string"
        },
        "vertical_between_bullet_points": {
          "default": "0.10 cm",
          "description": "The vertical margin between bullet points. The default value is 0.10 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Vertical Margin Between Bullet Points",
          "type": "string"
        }
      },
      "title": "HighlightsAreaMargins",
      "type": "object",
      "additionalProperties": false
    },
    "Margins": {
      "description": "This class is a data model for the margins.",
      "properties": {
        "page": {
          "allOf": [
            {
              "$ref": "#/$defs/PageMargins"
            }
          ],
          "default": {
            "top": "2 cm",
            "bottom": "2 cm",
            "left": "2 cm",
            "right": "2 cm"
          },
          "description": "Page margins.",
          "title": "Page Margins"
        },
        "section_title": {
          "allOf": [
            {
              "$ref": "#/$defs/SectionTitleMargins"
            }
          ],
          "default": {
            "top": "0.3 cm",
            "bottom": "0.2 cm"
          },
          "description": "Section title margins.",
          "title": "Section Title Margins"
        },
        "entry_area": {
          "allOf": [
            {
              "$ref": "#/$defs/EntryAreaMargins"
            }
          ],
          "default": {
            "left_and_right": "0.2 cm",
            "vertical_between": "0.2 cm",
            "date_and_location_width": "4.1 cm"
          },
          "description": "Entry area margins.",
          "title": "Entry Area Margins"
        },
        "highlights_area": {
          "allOf": [
            {
              "$ref": "#/$defs/HighlightsAreaMargins"
            }
          ],
          "default": {
            "top": "0.10 cm",
            "left": "0.4 cm",
            "vertical_between_bullet_points": "0.10 cm"
          },
          "description": "Highlights area margins.",
          "title": "Highlights Area Margins"
        },
        "header": {
          "allOf": [
            {
              "$ref": "#/$defs/HeaderMargins"
            }
          ],
          "default": {
            "vertical_between_name_and_connections": "0.3 cm",
            "bottom": "0.3 cm",
            "horizontal_between_connections": "0.5 cm"
          },
          "description": "Header margins.",
          "title": "Header Margins"
        }
      },
      "title": "Margins",
      "type": "object",
      "additionalProperties": false
    },
    "ModerncvThemeOptions": {
      "additionalProperties": false,
      "description": "This class is the data model of the theme options for the moderncv theme.",
      "properties": {
        "theme": {
          "const": "moderncv",
          "title": "Theme"
        },
        "font_size": {
          "default": "10pt",
          "description": "The font size of the CV. The default value is \"10pt\".",
          "enum": [
            "10pt",
            "11pt",
            "12pt"
          ],
          "examples": [
            "10pt",
            "11pt",
            "12pt"
          ],
          "title": "Font Size",
          "type": "string"
        },
        "page_size": {
          "default": "letterpaper",
          "description": "The page size of the CV. The default value is \"letterpaper\".",
          "enum": [
            "a4paper",
            "letterpaper"
          ],
          "examples": [
            "a4paper",
            "letterpaper"
          ],
          "title": "Page Size",
          "type": "string"
        },
        "color": {
          "default": "blue",
          "description": "The primary color of the CV. The default value is \"blue\".",
          "examples": [
            "blue",
            "black",
            "burgundy",
            "green",
            "grey",
            "orange",
            "purple",
            "red"
          ],
          "title": "Primary Color",
          "oneOf": [
            {
              "const": "blue"
            },
            {
              "const": "black"
            },
            {
              "const": "burgundy"
            },
            {
              "const": "green"
            },
            {
              "const": "grey"
            },
            {
              "const": "orange"
            },
            {
              "const": "purple"
            },
            {
              "const": "red"
            }
          ]
        },
        "date_width": {
          "default": "3.8 cm",
          "description": "The width of the date column. The default value is \"3.8 cm\".",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Date and Location Column Width",
          "type": "string"
        },
        "content_scale": {
          "default": 0.75,
          "description": "The scale of the content with respect to the page size. The default value is \"0.75\".",
          "title": "Content Scale",
          "type": "number"
        },
        "show_only_years": {
          "default": false,
          "description": "If \"True\", only the years will be shown in the date column. The default value is \"False\".",
          "title": "Show Only Years",
          "type": "boolean"
        },
        "disable_page_numbers": {
          "default": false,
          "description": "If \"True\", the page numbers will be disabled. The default value is \"False\".",
          "title": "Disable Page Numbers",
          "type": "boolean"
        }
      },
      "required": [
        "theme"
      ],
      "title": "ModerncvThemeOptions",
      "type": "object"
    },
    "NormalEntry": {
      "additionalProperties": false,
      "description": "This class is the data model of `NormalEntry`.",
      "properties": {
        "start_date": {
          "default": "2000-01-01",
          "description": "The start date of the event in YYYY-MM-DD, YYYY-MM, or YYYY format.",
          "examples": [
            "2020-09-24"
          ],
          "title": "Start Date",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "\\d{4}(-\\d{2})?(-\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "end_date": {
          "default": "2020-01-01",
          "description": "The end date of the event in YYYY-MM-DD, YYYY-MM, or YYYY format. If the event is still ongoing, then type \"present\" or provide only the start date.",
          "examples": [
            "2020-09-24",
            "present"
          ],
          "title": "End Date",
          "oneOf": [
            {
              "const": "present"
            },
            {
              "type": "integer"
            },
            {
              "pattern": "\\d{4}(-\\d{2})?(-\\d{2})?",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "date": {
          "default": "Custom Date or 2020-01-01",
          "description": "If the event is a one-day event, then this field should be filled in YYYY-MM-DD format. If the event is a multi-day event, then the start date and end date should be provided instead. All of them can't be provided at the same time.",
          "examples": [
            "2020-09-24",
            "My Custom Date"
          ],
          "title": "Date",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "highlights": {
          "default": null,
          "description": "The highlights of the event as a list of strings.",
          "examples": [
            "Did this.",
            "Did that."
          ],
          "title": "Highlights",
          "allOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "location": {
          "default": null,
          "description": "The location of the event.",
          "examples": [
            "Istanbul, T\u00fcrkiye"
          ],
          "title": "Location",
          "allOf": [
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "description": "The name of the entry. It will be shown as bold text.",
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "NormalEntry",
      "type": "object"
    },
    "OneLineEntry": {
      "additionalProperties": false,
      "description": "This class is the data model of `OneLineEntry`.",
      "properties": {
        "name": {
          "description": "The name of the entry. It will be shown as bold text.",
          "title": "Name",
          "type": "string"
        },
        "details": {
          "description": "The details of the entry. It will be shown as normal text.",
          "title": "Details",
          "type": "string"
        }
      },
      "required": [
        "name",
        "details"
      ],
      "title": "OneLineEntry",
      "type": "object"
    },
    "PageMargins": {
      "description": "This class is a data model for the page margins.",
      "properties": {
        "top": {
          "default": "2 cm",
          "description": "The top margin of the page with units. The default value is 2 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Top Margin",
          "type": "string"
        },
        "bottom": {
          "default": "2 cm",
          "description": "The bottom margin of the page with units. The default value is 2 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Bottom Margin",
          "type": "string"
        },
        "left": {
          "default": "2 cm",
          "description": "The left margin of the page with units. The default value is 2 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Left Margin",
          "type": "string"
        },
        "right": {
          "default": "2 cm",
          "description": "The right margin of the page with units. The default value is 2 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Right Margin",
          "type": "string"
        }
      },
      "title": "PageMargins",
      "type": "object",
      "additionalProperties": false
    },
    "PublicationEntry": {
      "additionalProperties": false,
      "description": "This class is the data model of `PublicationEntry`.",
      "properties": {
        "title": {
          "description": "The title of the publication. It will be shown as bold text.",
          "title": "Title of the Publication",
          "type": "string"
        },
        "authors": {
          "description": "The authors of the publication in order as a list of strings.",
          "items": {
            "type": "string"
          },
          "title": "Authors",
          "type": "array"
        },
        "doi": {
          "description": "The DOI of the publication.",
          "examples": [
            "10.48550/arXiv.2310.03138"
          ],
          "title": "DOI",
          "type": "string"
        },
        "date": {
          "default": "2020-01-01",
          "description": "The date of the publication in YYYY-MM-DD, YYYY-MM, or YYYY format.",
          "examples": [
            "2021-10-31",
            "2010"
          ],
          "title": "Publication Date",
          "oneOf": [
            {
              "pattern": "\\d{4}(-\\d{2})?(-\\d{2})?",
              "type": "string"
            }
          ]
        },
        "journal": {
          "default": null,
          "description": "The journal or the conference name.",
          "title": "Journal",
          "allOf": [
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "title",
        "authors",
        "doi",
        "date"
      ],
      "title": "PublicationEntry",
      "type": "object"
    },
    "Sb2novThemeOptions": {
      "additionalProperties": false,
      "description": "This class is the data model of the theme options for the sb2nov theme.",
      "properties": {
        "font_size": {
          "default": "10pt",
          "description": "The font size of the CV. The default value is 10pt.",
          "enum": [
            "10pt",
            "11pt",
            "12pt"
          ],
          "title": "Font Size",
          "type": "string"
        },
        "page_size": {
          "default": "letterpaper",
          "description": "The page size of the CV. It can be a4paper or letterpaper. The default value is letterpaper.",
          "enum": [
            "a4paper",
            "letterpaper"
          ],
          "title": "Page Size",
          "type": "string"
        },
        "color": {
          "default": "rgb(0,79,144)",
          "description": "The primary color of the theme. \nThe color can be specified either with their [name](https://www.w3.org/TR/SVG11/types.html#ColorKeywords), hexadecimal value, RGB value, or HSL value. The default value is rgb(0,79,144).",
          "examples": [
            "Black",
            "7fffd4",
            "rgb(0,79,144)",
            "hsl(270, 60%, 70%)"
          ],
          "format": "color",
          "title": "Primary Color",
          "type": "string"
        },
        "disable_page_numbering": {
          "default": false,
          "description": "If this option is set to true, then the page numbering will be disabled. The default value is false.",
          "title": "Disable Page Numbering",
          "type": "boolean"
        },
        "page_numbering_style": {
          "default": "NAME - Page PAGE_NUMBER of TOTAL_PAGES",
          "description": "The style of the page numbering. The following placeholders can be used:\n- NAME: The name of the person\n- PAGE_NUMBER: The current page number\n- TOTAL_PAGES: The total number of pages\nThe default value is NAME - Page PAGE_NUMBER of TOTAL_PAGES.",
          "title": "Page Numbering Style",
          "type": "string"
        },
        "show_last_updated_date": {
          "default": true,
          "description": "If this option is set to true, then the last updated date will be shown in the header. The default value is true.",
          "title": "Show Last Updated Date",
          "type": "boolean"
        },
        "header_font_size": {
          "default": "24 pt",
          "description": "The font size of the header (the name of the person). The default value is 24 pt. Unfortunately, sb2nov does not support font sizes bigger than 24 pt.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Header Font Size",
          "type": "string"
        },
        "text_alignment": {
          "default": "justified",
          "description": "The alignment of the text. The default value is justified.",
          "enum": [
            "left-aligned",
            "justified"
          ],
          "title": "Text Alignment",
          "type": "string"
        },
        "margins": {
          "allOf": [
            {
              "$ref": "#/$defs/Margins"
            }
          ],
          "default": {
            "page": {
              "bottom": "2 cm",
              "left": "2 cm",
              "right": "2 cm",
              "top": "2 cm"
            },
            "section_title": {
              "bottom": "0.2 cm",
              "top": "0.3 cm"
            },
            "entry_area": {
              "date_and_location_width": "4.1 cm",
              "left_and_right": "0.2 cm",
              "vertical_between": "0.2 cm"
            },
            "highlights_area": {
              "left": "0.4 cm",
              "top": "0.10 cm",
              "vertical_between_bullet_points": "0.10 cm"
            },
            "header": {
              "bottom": "0.3 cm",
              "horizontal_between_connections": "0.5 cm",
              "vertical_between_name_and_connections": "0.3 cm"
            }
          },
          "description": "Page, section title, entry field, and highlights field margins.",
          "title": "Margins"
        },
        "theme": {
          "const": "sb2nov",
          "title": "Theme"
        }
      },
      "required": [
        "theme"
      ],
      "title": "Sb2novThemeOptions",
      "type": "object"
    },
    "SectionTitleMargins": {
      "description": "This class is a data model for the section title margins.",
      "properties": {
        "top": {
          "default": "0.3 cm",
          "description": "The top margin of section titles. The default value is 0.3 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Top Margin",
          "type": "string"
        },
        "bottom": {
          "default": "0.2 cm",
          "description": "The bottom margin of section titles. The default value is 0.3 cm.",
          "pattern": "\\d+\\.?\\d* *(cm|in|pt|mm|ex|em)",
          "title": "Bottom Margin",
          "type": "string"
        }
      },
      "title": "SectionTitleMargins",
      "type": "object",
      "additionalProperties": false
    },
    "SocialNetwork": {
      "additionalProperties": false,
      "description": "This class is the data model of a social network.",
      "properties": {
        "network": {
          "description": "The social network name.",
          "enum": [
            "LinkedIn",
            "GitHub",
            "Instagram",
            "Orcid",
            "Mastodon",
            "Twitter"
          ],
          "title": "Social Network",
          "type": "string"
        },
        "username": {
          "description": "The username of the social network. The link will be generated.",
          "title": "Username",
          "type": "string"
        }
      },
      "required": [
        "network",
        "username"
      ],
      "title": "SocialNetwork",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "RenderCV data model.",
  "properties": {
    "cv": {
      "allOf": [
        {
          "$ref": "#/$defs/CurriculumVitae"
        }
      ],
      "description": "The data of the CV.",
      "title": "Curriculum Vitae"
    },
    "language": {
      "default": "en",
      "description": "The language to generate the CV in",
      "enum": [
        "en",
        "nl"
      ],
      "title": "Language",
      "type": "string"
    },
    "design": {
      "default": {
        "font_size": "10pt",
        "page_size": "letterpaper",
        "color": "#004f90",
        "disable_page_numbering": false,
        "page_numbering_style": "NAME - Page PAGE_NUMBER of TOTAL_PAGES",
        "show_last_updated_date": true,
        "header_font_size": "30 pt",
        "text_alignment": "justified",
        "margins": {
          "entry_area": {
            "date_and_location_width": "4.1 cm",
            "left_and_right": "0.2 cm",
            "vertical_between": "0.2 cm"
          },
          "header": {
            "bottom": "0.3 cm",
            "horizontal_between_connections": "0.5 cm",
            "vertical_between_name_and_connections": "0.3 cm"
          },
          "highlights_area": {
            "left": "0.4 cm",
            "top": "0.10 cm",
            "vertical_between_bullet_points": "0.10 cm"
          },
          "page": {
            "bottom": "2 cm",
            "left": "2 cm",
            "right": "2 cm",
            "top": "2 cm"
          },
          "section_title": {
            "bottom": "0.2 cm",
            "top": "0.3 cm"
          }
        },
        "theme": "classic",
        "show_timespan_in": []
      },
      "description": "The design information of the CV. The default is the classic theme.",
      "discriminator": {
        "mapping": {
          "classic": "#/$defs/ClassicThemeOptions",
          "moderncv": "#/$defs/ModerncvThemeOptions",
          "sb2nov": "#/$defs/Sb2novThemeOptions"
        },
        "propertyName": "theme"
      },
      "oneOf": [
        {
          "$ref": "#/$defs/ClassicThemeOptions"
        },
        {
          "$ref": "#/$defs/ModerncvThemeOptions"
        },
        {
          "$ref": "#/$defs/Sb2novThemeOptions"
        }
      ],
      "title": "Design"
    }
  },
  "required": [
    "cv"
  ],
  "title": "RenderCV",
  "type": "object",
  "$id": "https://raw.githubusercontent.com/sinaatalay/rendercv/main/schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#"
}